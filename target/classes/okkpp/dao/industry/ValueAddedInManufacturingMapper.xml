<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="okkpp.dao.industry.ValueAddedInManufacturingMapper" >

    <resultMap id="BaseResultMap" type="okkpp.model.industry.ValueAddedInManufacturing" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="country" property="country" jdbcType="VARCHAR" />
        <result column="year" property="year" jdbcType="VARCHAR" />
        <result column="added_value" property="addedValue" jdbcType="DOUBLE" />
        <result column="food_beverages_tobacco" property="foodBeveragesTobacco" jdbcType="DOUBLE" />
        <result column="textiles_clothing" property="textilesClothing" jdbcType="DOUBLE" />
        <result column="sort" property="sort" jdbcType="INTEGER" />
        <result column="update" property="update" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, country, year, added_value, food_beverages_tobacco, textiles_clothing, sort, 
        update
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="okkpp.model.industry.ValueAddedInManufacturingExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from t_industry_value_added_in_manufacturing
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from t_industry_value_added_in_manufacturing
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from t_industry_value_added_in_manufacturing
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByExample" parameterType="okkpp.model.industry.ValueAddedInManufacturingExample" >
        delete from t_industry_value_added_in_manufacturing
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="okkpp.model.industry.ValueAddedInManufacturing" >
        insert into t_industry_value_added_in_manufacturing (id, country, year, 
            added_value, food_beverages_tobacco, textiles_clothing, 
            sort, update)
        values (#{id,jdbcType=INTEGER}, #{country,jdbcType=VARCHAR}, #{year,jdbcType=VARCHAR}, 
            #{addedValue,jdbcType=DOUBLE}, #{foodBeveragesTobacco,jdbcType=DOUBLE}, #{textilesClothing,jdbcType=DOUBLE}, 
            #{sort,jdbcType=INTEGER}, #{update,jdbcType=TIMESTAMP})
    </insert>

    <insert id="insertSelective" parameterType="okkpp.model.industry.ValueAddedInManufacturing" >
        insert into t_industry_value_added_in_manufacturing
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="country != null" >
                country,
            </if>
            <if test="year != null" >
                year,
            </if>
            <if test="addedValue != null" >
                added_value,
            </if>
            <if test="foodBeveragesTobacco != null" >
                food_beverages_tobacco,
            </if>
            <if test="textilesClothing != null" >
                textiles_clothing,
            </if>
            <if test="sort != null" >
                sort,
            </if>
            <if test="update != null" >
                update,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="country != null" >
                #{country,jdbcType=VARCHAR},
            </if>
            <if test="year != null" >
                #{year,jdbcType=VARCHAR},
            </if>
            <if test="addedValue != null" >
                #{addedValue,jdbcType=DOUBLE},
            </if>
            <if test="foodBeveragesTobacco != null" >
                #{foodBeveragesTobacco,jdbcType=DOUBLE},
            </if>
            <if test="textilesClothing != null" >
                #{textilesClothing,jdbcType=DOUBLE},
            </if>
            <if test="sort != null" >
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="update != null" >
                #{update,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByExampleSelective" parameterType="map" >
        update t_industry_value_added_in_manufacturing
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.country != null" >
                country = #{record.country,jdbcType=VARCHAR},
            </if>
            <if test="record.year != null" >
                year = #{record.year,jdbcType=VARCHAR},
            </if>
            <if test="record.addedValue != null" >
                added_value = #{record.addedValue,jdbcType=DOUBLE},
            </if>
            <if test="record.foodBeveragesTobacco != null" >
                food_beverages_tobacco = #{record.foodBeveragesTobacco,jdbcType=DOUBLE},
            </if>
            <if test="record.textilesClothing != null" >
                textiles_clothing = #{record.textilesClothing,jdbcType=DOUBLE},
            </if>
            <if test="record.sort != null" >
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.update != null" >
                update = #{record.update,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update t_industry_value_added_in_manufacturing
        set id = #{record.id,jdbcType=INTEGER},
            country = #{record.country,jdbcType=VARCHAR},
            year = #{record.year,jdbcType=VARCHAR},
            added_value = #{record.addedValue,jdbcType=DOUBLE},
            food_beverages_tobacco = #{record.foodBeveragesTobacco,jdbcType=DOUBLE},
            textiles_clothing = #{record.textilesClothing,jdbcType=DOUBLE},
            sort = #{record.sort,jdbcType=INTEGER},
            update = #{record.update,jdbcType=TIMESTAMP}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="okkpp.model.industry.ValueAddedInManufacturing" >
        update t_industry_value_added_in_manufacturing
        <set >
            <if test="country != null" >
                country = #{country,jdbcType=VARCHAR},
            </if>
            <if test="year != null" >
                year = #{year,jdbcType=VARCHAR},
            </if>
            <if test="addedValue != null" >
                added_value = #{addedValue,jdbcType=DOUBLE},
            </if>
            <if test="foodBeveragesTobacco != null" >
                food_beverages_tobacco = #{foodBeveragesTobacco,jdbcType=DOUBLE},
            </if>
            <if test="textilesClothing != null" >
                textiles_clothing = #{textilesClothing,jdbcType=DOUBLE},
            </if>
            <if test="sort != null" >
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="update != null" >
                update = #{update,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="okkpp.model.industry.ValueAddedInManufacturing" >
        update t_industry_value_added_in_manufacturing
        set country = #{country,jdbcType=VARCHAR},
            year = #{year,jdbcType=VARCHAR},
            added_value = #{addedValue,jdbcType=DOUBLE},
            food_beverages_tobacco = #{foodBeveragesTobacco,jdbcType=DOUBLE},
            textiles_clothing = #{textilesClothing,jdbcType=DOUBLE},
            sort = #{sort,jdbcType=INTEGER},
            update = #{update,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>