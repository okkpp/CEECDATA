<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="okkpp.dao.employment.LaborForceParticipationRateMapper">
  <resultMap id="BaseResultMap" type="okkpp.model.employment.LaborForceParticipationRate">
    <!--
      WARNING - @mbggenerated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="total_labor_force" jdbcType="INTEGER" property="totalLaborForce" />
    <result column="participation_rate" jdbcType="DOUBLE" property="participationRate" />
    <result column="female_participation_rate" jdbcType="DOUBLE" property="femaleParticipationRate" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="update" jdbcType="TIMESTAMP" property="update" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
    -->
    id, country, total_labor_force, participation_rate, female_participation_rate, sort, 
    update
  </sql>
  <select id="selectByExample" parameterType="okkpp.model.employment.LaborForceParticipationRateExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_employment_labor_force_participation_rate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="okkpp.model.employment.LaborForceParticipationRateExample">
    <!--
      WARNING - @mbggenerated
    -->
    delete from t_employment_labor_force_participation_rate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <select id="countByExample" parameterType="okkpp.model.employment.LaborForceParticipationRateExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
    -->
    select count(*) from t_employment_labor_force_participation_rate
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
    -->
    update t_employment_labor_force_participation_rate
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.totalLaborForce != null">
        total_labor_force = #{record.totalLaborForce,jdbcType=INTEGER},
      </if>
      <if test="record.participationRate != null">
        participation_rate = #{record.participationRate,jdbcType=DOUBLE},
      </if>
      <if test="record.femaleParticipationRate != null">
        female_participation_rate = #{record.femaleParticipationRate,jdbcType=DOUBLE},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.update != null">
        update = #{record.update,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
    -->
    update t_employment_labor_force_participation_rate
    set id = #{record.id,jdbcType=INTEGER},
      country = #{record.country,jdbcType=VARCHAR},
      total_labor_force = #{record.totalLaborForce,jdbcType=INTEGER},
      participation_rate = #{record.participationRate,jdbcType=DOUBLE},
      female_participation_rate = #{record.femaleParticipationRate,jdbcType=DOUBLE},
      sort = #{record.sort,jdbcType=INTEGER},
      update = #{record.update,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>