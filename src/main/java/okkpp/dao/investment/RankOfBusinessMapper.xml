<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="okkpp.dao.investment.RankOfBusinessMapper" >

    <resultMap id="BaseResultMap" type="okkpp.model.investment.RankOfBusiness" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="country" property="country" jdbcType="VARCHAR" />
        <result column="year" property="year" jdbcType="VARCHAR" />
        <result column="business_rank" property="businessRank" jdbcType="INTEGER" />
        <result column="start_rank" property="startRank" jdbcType="INTEGER" />
        <result column="construction_rank" property="constructionRank" jdbcType="INTEGER" />
        <result column="construction_number" property="constructionNumber" jdbcType="INTEGER" />
        <result column="construction_days" property="constructionDays" jdbcType="DOUBLE" />
        <result column="property_rank" property="propertyRank" jdbcType="INTEGER" />
        <result column="property_number" property="propertyNumber" jdbcType="INTEGER" />
        <result column="property_days" property="propertyDays" jdbcType="DOUBLE" />
        <result column="credit_rank" property="creditRank" jdbcType="INTEGER" />
        <result column="taxes_rank" property="taxesRank" jdbcType="INTEGER" />
        <result column="investors_rank" property="investorsRank" jdbcType="INTEGER" />
        <result column="investors_index" property="investorsIndex" jdbcType="DOUBLE" />
        <result column="trading_rank" property="tradingRank" jdbcType="INTEGER" />
        <result column="contracts_rank" property="contractsRank" jdbcType="INTEGER" />
        <result column="contracts_days" property="contractsDays" jdbcType="DOUBLE" />
        <result column="insolvency_rank" property="insolvencyRank" jdbcType="INTEGER" />
        <result column="insolcenvy_days" property="insolcenvyDays" jdbcType="DOUBLE" />
        <result column="insolvency_rate" property="insolvencyRate" jdbcType="DOUBLE" />
        <result column="sort" property="sort" jdbcType="INTEGER" />
        <result column="update" property="update" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, country, year, business_rank, start_rank, construction_rank, construction_number, 
        construction_days, property_rank, property_number, property_days, credit_rank, taxes_rank, 
        investors_rank, investors_index, trading_rank, contracts_rank, contracts_days, insolvency_rank, 
        insolcenvy_days, insolvency_rate, sort, update
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="okkpp.model.investment.RankOfBusinessExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from t_investment_rank_of_business
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from t_investment_rank_of_business
        where id = #{id,jdbcType=INTEGER}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from t_investment_rank_of_business
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <delete id="deleteByExample" parameterType="okkpp.model.investment.RankOfBusinessExample" >
        delete from t_investment_rank_of_business
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="okkpp.model.investment.RankOfBusiness" >
        insert into t_investment_rank_of_business (id, country, year, 
            business_rank, start_rank, construction_rank, 
            construction_number, construction_days, 
            property_rank, property_number, property_days, 
            credit_rank, taxes_rank, investors_rank, 
            investors_index, trading_rank, contracts_rank, 
            contracts_days, insolvency_rank, insolcenvy_days, 
            insolvency_rate, sort, update
            )
        values (#{id,jdbcType=INTEGER}, #{country,jdbcType=VARCHAR}, #{year,jdbcType=VARCHAR}, 
            #{businessRank,jdbcType=INTEGER}, #{startRank,jdbcType=INTEGER}, #{constructionRank,jdbcType=INTEGER}, 
            #{constructionNumber,jdbcType=INTEGER}, #{constructionDays,jdbcType=DOUBLE}, 
            #{propertyRank,jdbcType=INTEGER}, #{propertyNumber,jdbcType=INTEGER}, #{propertyDays,jdbcType=DOUBLE}, 
            #{creditRank,jdbcType=INTEGER}, #{taxesRank,jdbcType=INTEGER}, #{investorsRank,jdbcType=INTEGER}, 
            #{investorsIndex,jdbcType=DOUBLE}, #{tradingRank,jdbcType=INTEGER}, #{contractsRank,jdbcType=INTEGER}, 
            #{contractsDays,jdbcType=DOUBLE}, #{insolvencyRank,jdbcType=INTEGER}, #{insolcenvyDays,jdbcType=DOUBLE}, 
            #{insolvencyRate,jdbcType=DOUBLE}, #{sort,jdbcType=INTEGER}, #{update,jdbcType=TIMESTAMP}
            )
    </insert>

    <insert id="insertSelective" parameterType="okkpp.model.investment.RankOfBusiness" >
        insert into t_investment_rank_of_business
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="country != null" >
                country,
            </if>
            <if test="year != null" >
                year,
            </if>
            <if test="businessRank != null" >
                business_rank,
            </if>
            <if test="startRank != null" >
                start_rank,
            </if>
            <if test="constructionRank != null" >
                construction_rank,
            </if>
            <if test="constructionNumber != null" >
                construction_number,
            </if>
            <if test="constructionDays != null" >
                construction_days,
            </if>
            <if test="propertyRank != null" >
                property_rank,
            </if>
            <if test="propertyNumber != null" >
                property_number,
            </if>
            <if test="propertyDays != null" >
                property_days,
            </if>
            <if test="creditRank != null" >
                credit_rank,
            </if>
            <if test="taxesRank != null" >
                taxes_rank,
            </if>
            <if test="investorsRank != null" >
                investors_rank,
            </if>
            <if test="investorsIndex != null" >
                investors_index,
            </if>
            <if test="tradingRank != null" >
                trading_rank,
            </if>
            <if test="contractsRank != null" >
                contracts_rank,
            </if>
            <if test="contractsDays != null" >
                contracts_days,
            </if>
            <if test="insolvencyRank != null" >
                insolvency_rank,
            </if>
            <if test="insolcenvyDays != null" >
                insolcenvy_days,
            </if>
            <if test="insolvencyRate != null" >
                insolvency_rate,
            </if>
            <if test="sort != null" >
                sort,
            </if>
            <if test="update != null" >
                update,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="country != null" >
                #{country,jdbcType=VARCHAR},
            </if>
            <if test="year != null" >
                #{year,jdbcType=VARCHAR},
            </if>
            <if test="businessRank != null" >
                #{businessRank,jdbcType=INTEGER},
            </if>
            <if test="startRank != null" >
                #{startRank,jdbcType=INTEGER},
            </if>
            <if test="constructionRank != null" >
                #{constructionRank,jdbcType=INTEGER},
            </if>
            <if test="constructionNumber != null" >
                #{constructionNumber,jdbcType=INTEGER},
            </if>
            <if test="constructionDays != null" >
                #{constructionDays,jdbcType=DOUBLE},
            </if>
            <if test="propertyRank != null" >
                #{propertyRank,jdbcType=INTEGER},
            </if>
            <if test="propertyNumber != null" >
                #{propertyNumber,jdbcType=INTEGER},
            </if>
            <if test="propertyDays != null" >
                #{propertyDays,jdbcType=DOUBLE},
            </if>
            <if test="creditRank != null" >
                #{creditRank,jdbcType=INTEGER},
            </if>
            <if test="taxesRank != null" >
                #{taxesRank,jdbcType=INTEGER},
            </if>
            <if test="investorsRank != null" >
                #{investorsRank,jdbcType=INTEGER},
            </if>
            <if test="investorsIndex != null" >
                #{investorsIndex,jdbcType=DOUBLE},
            </if>
            <if test="tradingRank != null" >
                #{tradingRank,jdbcType=INTEGER},
            </if>
            <if test="contractsRank != null" >
                #{contractsRank,jdbcType=INTEGER},
            </if>
            <if test="contractsDays != null" >
                #{contractsDays,jdbcType=DOUBLE},
            </if>
            <if test="insolvencyRank != null" >
                #{insolvencyRank,jdbcType=INTEGER},
            </if>
            <if test="insolcenvyDays != null" >
                #{insolcenvyDays,jdbcType=DOUBLE},
            </if>
            <if test="insolvencyRate != null" >
                #{insolvencyRate,jdbcType=DOUBLE},
            </if>
            <if test="sort != null" >
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="update != null" >
                #{update,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>

    <update id="updateByExampleSelective" parameterType="map" >
        update t_investment_rank_of_business
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=INTEGER},
            </if>
            <if test="record.country != null" >
                country = #{record.country,jdbcType=VARCHAR},
            </if>
            <if test="record.year != null" >
                year = #{record.year,jdbcType=VARCHAR},
            </if>
            <if test="record.businessRank != null" >
                business_rank = #{record.businessRank,jdbcType=INTEGER},
            </if>
            <if test="record.startRank != null" >
                start_rank = #{record.startRank,jdbcType=INTEGER},
            </if>
            <if test="record.constructionRank != null" >
                construction_rank = #{record.constructionRank,jdbcType=INTEGER},
            </if>
            <if test="record.constructionNumber != null" >
                construction_number = #{record.constructionNumber,jdbcType=INTEGER},
            </if>
            <if test="record.constructionDays != null" >
                construction_days = #{record.constructionDays,jdbcType=DOUBLE},
            </if>
            <if test="record.propertyRank != null" >
                property_rank = #{record.propertyRank,jdbcType=INTEGER},
            </if>
            <if test="record.propertyNumber != null" >
                property_number = #{record.propertyNumber,jdbcType=INTEGER},
            </if>
            <if test="record.propertyDays != null" >
                property_days = #{record.propertyDays,jdbcType=DOUBLE},
            </if>
            <if test="record.creditRank != null" >
                credit_rank = #{record.creditRank,jdbcType=INTEGER},
            </if>
            <if test="record.taxesRank != null" >
                taxes_rank = #{record.taxesRank,jdbcType=INTEGER},
            </if>
            <if test="record.investorsRank != null" >
                investors_rank = #{record.investorsRank,jdbcType=INTEGER},
            </if>
            <if test="record.investorsIndex != null" >
                investors_index = #{record.investorsIndex,jdbcType=DOUBLE},
            </if>
            <if test="record.tradingRank != null" >
                trading_rank = #{record.tradingRank,jdbcType=INTEGER},
            </if>
            <if test="record.contractsRank != null" >
                contracts_rank = #{record.contractsRank,jdbcType=INTEGER},
            </if>
            <if test="record.contractsDays != null" >
                contracts_days = #{record.contractsDays,jdbcType=DOUBLE},
            </if>
            <if test="record.insolvencyRank != null" >
                insolvency_rank = #{record.insolvencyRank,jdbcType=INTEGER},
            </if>
            <if test="record.insolcenvyDays != null" >
                insolcenvy_days = #{record.insolcenvyDays,jdbcType=DOUBLE},
            </if>
            <if test="record.insolvencyRate != null" >
                insolvency_rate = #{record.insolvencyRate,jdbcType=DOUBLE},
            </if>
            <if test="record.sort != null" >
                sort = #{record.sort,jdbcType=INTEGER},
            </if>
            <if test="record.update != null" >
                update = #{record.update,jdbcType=TIMESTAMP},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update t_investment_rank_of_business
        set id = #{record.id,jdbcType=INTEGER},
            country = #{record.country,jdbcType=VARCHAR},
            year = #{record.year,jdbcType=VARCHAR},
            business_rank = #{record.businessRank,jdbcType=INTEGER},
            start_rank = #{record.startRank,jdbcType=INTEGER},
            construction_rank = #{record.constructionRank,jdbcType=INTEGER},
            construction_number = #{record.constructionNumber,jdbcType=INTEGER},
            construction_days = #{record.constructionDays,jdbcType=DOUBLE},
            property_rank = #{record.propertyRank,jdbcType=INTEGER},
            property_number = #{record.propertyNumber,jdbcType=INTEGER},
            property_days = #{record.propertyDays,jdbcType=DOUBLE},
            credit_rank = #{record.creditRank,jdbcType=INTEGER},
            taxes_rank = #{record.taxesRank,jdbcType=INTEGER},
            investors_rank = #{record.investorsRank,jdbcType=INTEGER},
            investors_index = #{record.investorsIndex,jdbcType=DOUBLE},
            trading_rank = #{record.tradingRank,jdbcType=INTEGER},
            contracts_rank = #{record.contractsRank,jdbcType=INTEGER},
            contracts_days = #{record.contractsDays,jdbcType=DOUBLE},
            insolvency_rank = #{record.insolvencyRank,jdbcType=INTEGER},
            insolcenvy_days = #{record.insolcenvyDays,jdbcType=DOUBLE},
            insolvency_rate = #{record.insolvencyRate,jdbcType=DOUBLE},
            sort = #{record.sort,jdbcType=INTEGER},
            update = #{record.update,jdbcType=TIMESTAMP}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="okkpp.model.investment.RankOfBusiness" >
        update t_investment_rank_of_business
        <set >
            <if test="country != null" >
                country = #{country,jdbcType=VARCHAR},
            </if>
            <if test="year != null" >
                year = #{year,jdbcType=VARCHAR},
            </if>
            <if test="businessRank != null" >
                business_rank = #{businessRank,jdbcType=INTEGER},
            </if>
            <if test="startRank != null" >
                start_rank = #{startRank,jdbcType=INTEGER},
            </if>
            <if test="constructionRank != null" >
                construction_rank = #{constructionRank,jdbcType=INTEGER},
            </if>
            <if test="constructionNumber != null" >
                construction_number = #{constructionNumber,jdbcType=INTEGER},
            </if>
            <if test="constructionDays != null" >
                construction_days = #{constructionDays,jdbcType=DOUBLE},
            </if>
            <if test="propertyRank != null" >
                property_rank = #{propertyRank,jdbcType=INTEGER},
            </if>
            <if test="propertyNumber != null" >
                property_number = #{propertyNumber,jdbcType=INTEGER},
            </if>
            <if test="propertyDays != null" >
                property_days = #{propertyDays,jdbcType=DOUBLE},
            </if>
            <if test="creditRank != null" >
                credit_rank = #{creditRank,jdbcType=INTEGER},
            </if>
            <if test="taxesRank != null" >
                taxes_rank = #{taxesRank,jdbcType=INTEGER},
            </if>
            <if test="investorsRank != null" >
                investors_rank = #{investorsRank,jdbcType=INTEGER},
            </if>
            <if test="investorsIndex != null" >
                investors_index = #{investorsIndex,jdbcType=DOUBLE},
            </if>
            <if test="tradingRank != null" >
                trading_rank = #{tradingRank,jdbcType=INTEGER},
            </if>
            <if test="contractsRank != null" >
                contracts_rank = #{contractsRank,jdbcType=INTEGER},
            </if>
            <if test="contractsDays != null" >
                contracts_days = #{contractsDays,jdbcType=DOUBLE},
            </if>
            <if test="insolvencyRank != null" >
                insolvency_rank = #{insolvencyRank,jdbcType=INTEGER},
            </if>
            <if test="insolcenvyDays != null" >
                insolcenvy_days = #{insolcenvyDays,jdbcType=DOUBLE},
            </if>
            <if test="insolvencyRate != null" >
                insolvency_rate = #{insolvencyRate,jdbcType=DOUBLE},
            </if>
            <if test="sort != null" >
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="update != null" >
                update = #{update,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <update id="updateByPrimaryKey" parameterType="okkpp.model.investment.RankOfBusiness" >
        update t_investment_rank_of_business
        set country = #{country,jdbcType=VARCHAR},
            year = #{year,jdbcType=VARCHAR},
            business_rank = #{businessRank,jdbcType=INTEGER},
            start_rank = #{startRank,jdbcType=INTEGER},
            construction_rank = #{constructionRank,jdbcType=INTEGER},
            construction_number = #{constructionNumber,jdbcType=INTEGER},
            construction_days = #{constructionDays,jdbcType=DOUBLE},
            property_rank = #{propertyRank,jdbcType=INTEGER},
            property_number = #{propertyNumber,jdbcType=INTEGER},
            property_days = #{propertyDays,jdbcType=DOUBLE},
            credit_rank = #{creditRank,jdbcType=INTEGER},
            taxes_rank = #{taxesRank,jdbcType=INTEGER},
            investors_rank = #{investorsRank,jdbcType=INTEGER},
            investors_index = #{investorsIndex,jdbcType=DOUBLE},
            trading_rank = #{tradingRank,jdbcType=INTEGER},
            contracts_rank = #{contractsRank,jdbcType=INTEGER},
            contracts_days = #{contractsDays,jdbcType=DOUBLE},
            insolvency_rank = #{insolvencyRank,jdbcType=INTEGER},
            insolcenvy_days = #{insolcenvyDays,jdbcType=DOUBLE},
            insolvency_rate = #{insolvencyRate,jdbcType=DOUBLE},
            sort = #{sort,jdbcType=INTEGER},
            update = #{update,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>